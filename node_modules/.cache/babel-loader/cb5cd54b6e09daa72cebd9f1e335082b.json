{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37258\\\\part1\\\\src\\\\components\\\\App.js\";\nimport React, { useState } from 'react';\n\nconst App = () => {\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas'\n  }]);\n  const [newName, setNewName] = useState('');\n\n  const updatePersons = e => {\n    e.preventDefault();\n    persons.filter(person => {\n      if (person.name !== newName) {\n        const updatedPersons = persons.concat({\n          name: newName\n        });\n        setPersons(updatedPersons);\n        setNewName('');\n      } else {\n        console.log('we already have it');\n        alert(`${newName} is already added to phonebook`);\n        return;\n      }\n    });\n    persons.forEach(person => {\n      if (person.name !== newName) {\n        const personObject = {\n          name: newName\n        };\n        const updatedPersons = persons.concat({\n          name: newName\n        });\n        setPersons(persons.concat(updatedPersons));\n        setNewName('');\n      } else {\n        console.log('we already have it');\n        alert(`${newName} is already added to phonebook`);\n        return;\n      }\n    });\n  };\n\n  const handleNoteChange = e => {\n    setNewName(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: updatePersons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"name: \", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleNoteChange,\n    value: newName,\n    type: \"text\",\n    name: \"option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"add\"))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, persons.map(person => {\n    person.id = persons.length * Math.random();\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }\n    }, person.name);\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/37258/part1/src/components/App.js"],"names":["React","useState","App","persons","setPersons","name","newName","setNewName","updatePersons","e","preventDefault","filter","person","updatedPersons","concat","console","log","alert","forEach","personObject","handleNoteChange","target","value","map","id","length","Math","random"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([\r\n    { name: 'Arto Hellas'},\r\n  ])\r\n  const [ newName, setNewName ] = useState('')\r\n\r\n  const updatePersons = (e) => {\r\n    e.preventDefault();\r\n\r\n  persons.filter((person) => {\r\n    if(person.name !== newName){\r\n      const updatedPersons = persons.concat({name: newName}) \r\n      setPersons(updatedPersons)\r\n      setNewName('') \r\n    } else {\r\n      console.log('we already have it')\r\n      alert(`${newName} is already added to phonebook`)\r\n      return;  \r\n    }\r\n  })\r\n\r\n    persons.forEach((person) => {\r\n      if (person.name !== newName) {\r\n        const personObject = {\r\n          name: newName,\r\n        }\r\n        const updatedPersons = persons.concat({name: newName}) \r\n        setPersons(persons.concat(updatedPersons))\r\n        setNewName('')       \r\n      } else {\r\n        console.log('we already have it')\r\n        alert(`${newName} is already added to phonebook`)\r\n        return;       \r\n      }\r\n\r\n    })\r\n      \r\n        \r\n\r\n        \r\n}\r\n\r\n  const handleNoteChange = (e) => {\r\n    setNewName(e.target.value)\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <form onSubmit={updatePersons}>\r\n        <div>\r\n          name: <input\r\n            onChange={handleNoteChange}\r\n            value={newName}\r\n            type=\"text\"\r\n            name=\"option\"/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      <h2>Numbers</h2>\r\n      <div>\r\n          {persons.map((person) => {\r\n            person.id = persons.length * Math.random()\r\n            return <p key={person.id}>{person.name}</p>\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}