{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37258\\\\part1\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, text), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, value));\n};\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  all,\n  average,\n  positive\n}) => {\n  console.log(good);\n\n  if (good || neutral || bad) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"statistics\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Statistic, {\n      text: \"good\",\n      value: good,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"neutral\",\n      value: neutral,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"bad\",\n      value: bad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"all\",\n      value: all,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"average\",\n      value: average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Statistic, {\n      text: \"positive\",\n      value: positive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, \"statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, \"No feedback given\"));\n  }\n};\n\nconst Button = ({\n  handleGoodClick,\n  handleNeutralClick,\n  handleBadClick\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleGoodClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNeutralClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleBadClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"bad\"));\n};\n\nconst App = props => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n  const average = (good - bad) / all;\n  const positive = good / all * 100;\n\n  const handleGoodClick = () => setGood(good + 1);\n\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n\n  const handleBadClick = () => setBad(bad + 1);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    handleGoodClick: handleGoodClick,\n    handleNeutralClick: handleNeutralClick,\n    handleBadClick: handleBadClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    all: all,\n    average: average,\n    positive: positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/37258/part1/src/index.js"],"names":["React","useState","ReactDOM","Statistic","text","value","Statistics","good","neutral","bad","all","average","positive","console","log","Button","handleGoodClick","handleNeutralClick","handleBadClick","App","props","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAmB;AACnC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CAFF,CADF;AAMD,CAPD;;AASA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,GAAhB;AAAqBC,EAAAA,GAArB;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA;AAAnC,CAAD,KAAkD;AACnEC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AACA,MAAIA,IAAI,IAAIC,OAAR,IAAmBC,GAAvB,EAA4B;AAC1B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,KAAK,EAAEF,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAEC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,KAAhB;AAAsB,MAAA,KAAK,EAAEC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,KAAhB;AAAsB,MAAA,KAAK,EAAEC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,SAAhB;AAA0B,MAAA,KAAK,EAAEC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAEC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CAFF,CADF;AAeD,GAhBD,MAgBO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFA,CADF;AAMD;AAEF,CA3BD;;AA6BA,MAAMG,MAAM,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,kBAAlB;AAAsCC,EAAAA;AAAtC,CAAD,KAA2D;AACxE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEF,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF;AAQD,CATD;;AAWA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB;AACA,QAAM,CAACb,IAAD,EAAOc,OAAP,IAAkBpB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUc,UAAV,IAAwBrB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMc,MAAN,IAAgBtB,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAMS,GAAG,GAAGH,IAAI,GAAGC,OAAP,GAAiBC,GAA7B;AACA,QAAME,OAAO,GAAG,CAACJ,IAAI,GAAGE,GAAR,IAAeC,GAA/B;AACA,QAAME,QAAQ,GAAIL,IAAI,GAACG,GAAN,GAAa,GAA9B;;AAEA,QAAMM,eAAe,GAAG,MAAMK,OAAO,CAACd,IAAI,GAAG,CAAR,CAArC;;AACA,QAAMU,kBAAkB,GAAG,MAAMK,UAAU,CAACd,OAAO,GAAG,CAAX,CAA3C;;AACA,QAAMU,cAAc,GAAG,MAAMK,MAAM,CAACd,GAAG,GAAG,CAAP,CAAnC;;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,eAAe,EAAEO,eAAzB;AAA0C,IAAA,kBAAkB,EAAEC,kBAA9D;AAAkF,IAAA,cAAc,EAAEC,cAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAKE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEX,IAAlB;AAAwB,IAAA,OAAO,EAAEC,OAAjC;AAA0C,IAAA,GAAG,EAAEC,GAA/C;AAAoD,IAAA,GAAG,EAAEC,GAAzD;AAA8D,IAAA,OAAO,EAAEC,OAAvE;AAAgF,IAAA,QAAQ,EAAEC,QAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAUD,CAxBD;;AA0BAV,QAAQ,CAACsB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistic = ({text, value}) => {\n  return (\n    <tr>\n      <td>{text}</td>\n      <td>{value}</td>\n    </tr>\n  )\n}\n\nconst Statistics = ({good, neutral, bad, all, average, positive}) => {\n  console.log(good)\n  if (good || neutral || bad) {\n    return (\n      <div>\n        <h1>statistics</h1>\n        <table>\n          <tbody>\n            <Statistic text='good' value={good}></Statistic>\n            <Statistic text='neutral' value={neutral}></Statistic>\n            <Statistic text='bad' value={bad}></Statistic>\n            <Statistic text='all' value={all}></Statistic>\n            <Statistic text='average' value={average}></Statistic>\n            <Statistic text='positive' value={positive}></Statistic>\n          </tbody>\n        </table>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n      <h1>statistics</h1>\n      <p>No feedback given</p>\n      </div>\n    )\n  }\n  \n}\n\nconst Button = ({handleGoodClick, handleNeutralClick, handleBadClick}) => {\n  return (\n    <div>\n      <button onClick={handleGoodClick}>good</button>\n      <button onClick={handleNeutralClick}>neutral</button>\n      <button onClick={handleBadClick}>bad</button>\n    </div>\n\n  )\n}\n\nconst App = (props) => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const all = good + neutral + bad\n  const average = (good - bad) / all\n  const positive = (good/all) * 100\n\n  const handleGoodClick = () => setGood(good + 1);\n  const handleNeutralClick = () => setNeutral(neutral + 1)\n  const handleBadClick = () => setBad(bad + 1)\n\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <div>\n        <Button handleGoodClick={handleGoodClick} handleNeutralClick={handleNeutralClick} handleBadClick={handleBadClick}/>\n      </div>\n      <Statistics good={good} neutral={neutral} bad={bad} all={all} average={average} positive={positive}/>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}