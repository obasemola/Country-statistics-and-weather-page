{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37258\\\\part1\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [country, setCountry] = useState('');\n  const [countriesInfo, setCountriesInfo] = useState([]);\n  const [dataResponse, setDataResponse] = useState([]);\n  const [dataDisplayed, setDataDisplayed] = useState('');\n\n  const hook = () => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountriesInfo(response.data);\n    });\n  };\n\n  useEffect(hook, []); // console.log(countriesInfo[0]);\n\n  const handleCountryChange = e => {\n    setCountry(e.target.value);\n    console.log(e.target.value); // console.log(country);\n\n    const found = countriesInfo.findIndex(countryInfo => {\n      return countryInfo.name.includes(country);\n    });\n\n    if (found === -1) {\n      return;\n    } else if (found > -1) {\n      const updatedCountry = countriesInfo.filter(countryInfo => {\n        return countryInfo.name.includes(country);\n      });\n      setDataResponse(updatedCountry);\n      console.log(dataResponse);\n    }\n\n    if (dataResponse.length > 10) {\n      setDataDisplayed('Too many matches, specify another filter');\n    } // else if ( dataResponse.length < 10 && dataResponse.length > 1 ) {\n    //   const returnedData = dataResponse.map((data) => {\n    //     return <p key={data.numericCode}>{data.name}</p>\n    //   })\n    //   setDataDisplayed(returnedData)\n    //   // console.log(dataResponse)\n    // } \n    else if (dataResponse.length === 1) {\n        const returnedData = dataResponse.map(data => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: data.numericCode,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 16\n            }\n          }, /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }\n          }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }\n          }, \"capital \", data.capital), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }\n          }, \"population \", data.population), /*#__PURE__*/React.createElement(\"h4\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }\n          }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }\n          }, data.languages.map(language => {\n            return /*#__PURE__*/React.createElement(\"li\", {\n              key: data.nativeName,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 28\n              }\n            }, language.name);\n          })), /*#__PURE__*/React.createElement(\"img\", {\n            src: data.flag,\n            width: \"100\",\n            height: \"100\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }\n          }));\n        });\n        setDataDisplayed(returnedData);\n      } else {\n        setCountry('');\n        setDataDisplayed('');\n      }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"find countries\", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), dataDisplayed);\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/37258/part1/src/components/App.js"],"names":["React","useState","useEffect","axios","App","country","setCountry","countriesInfo","setCountriesInfo","dataResponse","setDataResponse","dataDisplayed","setDataDisplayed","hook","get","then","response","data","handleCountryChange","e","target","value","console","log","found","findIndex","countryInfo","name","includes","updatedCountry","filter","length","returnedData","map","numericCode","capital","population","languages","language","nativeName","flag"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst App = () => {\r\n  const [ country, setCountry ] = useState('');\r\n  const [ countriesInfo, setCountriesInfo ] = useState([]);\r\n  const [ dataResponse, setDataResponse ] = useState([]);\r\n  const [ dataDisplayed, setDataDisplayed ] = useState('')\r\n\r\n  const hook = () => {\r\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\r\n      setCountriesInfo(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(hook, []);\r\n  // console.log(countriesInfo[0]);\r\n\r\n  const handleCountryChange = (e) => {\r\n    setCountry(e.target.value)\r\n    console.log(e.target.value)\r\n    // console.log(country);\r\n    const found = countriesInfo.findIndex((countryInfo) => {\r\n      return countryInfo.name.includes(country)\r\n    })\r\n\r\n    if( found === -1 ) {\r\n      return;\r\n    } else if ( found > -1 ) {\r\n      const updatedCountry = countriesInfo.filter((countryInfo) => {\r\n        return countryInfo.name.includes(country)\r\n      })\r\n      setDataResponse(updatedCountry)\r\n      console.log(dataResponse)\r\n    }\r\n \r\n\r\n    if ( dataResponse.length >  10) {\r\n\r\n      setDataDisplayed('Too many matches, specify another filter')\r\n    } \r\n    // else if ( dataResponse.length < 10 && dataResponse.length > 1 ) {\r\n    //   const returnedData = dataResponse.map((data) => {\r\n    //     return <p key={data.numericCode}>{data.name}</p>\r\n    //   })\r\n    //   setDataDisplayed(returnedData)\r\n    //   // console.log(dataResponse)\r\n    // } \r\n    else if ( dataResponse.length === 1 ) {\r\n      const returnedData = dataResponse.map((data) => {\r\n \r\n        return <div key={data.numericCode}>\r\n                <h1>{data.name}</h1>\r\n                <p>capital {data.capital}</p>\r\n                <p>population {data.population}</p>\r\n                <h4>languages</h4>\r\n                <ul>\r\n                  {data.languages.map((language) => {\r\n                    return <li key={data.nativeName}>{language.name}</li>\r\n                  })}\r\n                </ul>\r\n                <img src={data.flag} width=\"100\" height=\"100\"/>\r\n               </div>\r\n        \r\n      })\r\n      setDataDisplayed(returnedData)\r\n    } else {\r\n      setCountry('')\r\n      setDataDisplayed('')\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        find countries\r\n        <input\r\n        onChange={handleCountryChange}\r\n        value={country}>\r\n        </input>\r\n      </form>\r\n      {dataDisplayed}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}