{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37258\\\\part1\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const hook = () => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountriesInfo(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n  const [country, setCountry] = useState('');\n  const [countriesInfo, setCountriesInfo] = useState([]);\n  const [dataResponse, setDataResponse] = useState([]);\n  const [dataDisplayed, setDataDisplayed] = useState(''); // console.log(countriesInfo[0]);\n\n  const handleCountryChange = e => {\n    let target = e.target.value;\n    setCountry(target); // console.log(e.target.value);\n\n    const found = countriesInfo.findIndex(countryInfo => {\n      return countryInfo.name.includes(count);\n    });\n\n    if (found === -1) {\n      return;\n    } else if (found > -1) {\n      const updatedCountry = countriesInfo.filter(countryInfo => {\n        return countryInfo.name.includes(country);\n      });\n      setDataResponse(updatedCountry); // console.log(dataResponse)\n    }\n\n    if (dataResponse.length > 10) {\n      setDataDisplayed('Too many matches, specify another filter');\n    } else if (dataResponse.length < 10 && dataResponse.length > 1) {\n      const returnedData = dataResponse.map(data => {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          key: data.numericCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 16\n          }\n        }, data.name);\n      });\n      setDataDisplayed(returnedData); // console.log(dataResponse)\n    } else if (dataResponse.length === 1) {\n      const returnedData = dataResponse.map(data => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: data.numericCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }\n        }, data.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        }, \"capital \", data.capital), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }\n        }, \"population \", data.population), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }\n        }, data.languages.map(language => {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: data.nativeName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 28\n            }\n          }, language.name);\n        })), /*#__PURE__*/React.createElement(\"img\", {\n          src: data.flag,\n          width: \"100\",\n          height: \"100\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }\n        }));\n      });\n      setDataDisplayed(returnedData);\n    } else {\n      setCountry('');\n      setDataDisplayed('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"find countries\", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), dataDisplayed);\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/37258/part1/src/components/App.js"],"names":["React","useState","useEffect","axios","App","hook","get","then","response","setCountriesInfo","data","country","setCountry","countriesInfo","dataResponse","setDataResponse","dataDisplayed","setDataDisplayed","handleCountryChange","e","target","value","found","findIndex","countryInfo","name","includes","count","updatedCountry","filter","length","returnedData","map","numericCode","capital","population","languages","language","nativeName","flag"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst App = () => {\r\n\r\n\r\n  const hook = () => {\r\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\r\n      setCountriesInfo(response.data)\r\n    })\r\n  }\r\n\r\n  useEffect(hook, []);\r\n\r\n  const [ country, setCountry ] = useState('');\r\n  const [ countriesInfo, setCountriesInfo ] = useState([]);\r\n  const [ dataResponse, setDataResponse ] = useState([]);\r\n  const [ dataDisplayed, setDataDisplayed ] = useState('')\r\n  // console.log(countriesInfo[0]);\r\n\r\n  const handleCountryChange = (e) => {\r\n    let target = e.target.value\r\n    setCountry(target)\r\n    // console.log(e.target.value);\r\n\r\n    const found = countriesInfo.findIndex((countryInfo) => {\r\n      return countryInfo.name.includes(count)\r\n    })\r\n\r\n    if( found === -1 ) {\r\n      return;\r\n    } else if ( found > -1 ) {\r\n      const updatedCountry = countriesInfo.filter((countryInfo) => {\r\n        return countryInfo.name.includes(country)\r\n      })\r\n      setDataResponse(updatedCountry)\r\n      // console.log(dataResponse)\r\n    }\r\n \r\n\r\n    if ( dataResponse.length >  10) {\r\n\r\n      setDataDisplayed('Too many matches, specify another filter')\r\n    } else if ( dataResponse.length < 10 && dataResponse.length > 1 ) {\r\n      const returnedData = dataResponse.map((data) => {\r\n        return <p key={data.numericCode}>{data.name}</p>\r\n      })\r\n      setDataDisplayed(returnedData)\r\n      // console.log(dataResponse)\r\n    } else if ( dataResponse.length === 1 ) {\r\n      const returnedData = dataResponse.map((data) => {\r\n \r\n        return <div key={data.numericCode}>\r\n                <h1>{data.name}</h1>\r\n                <p>capital {data.capital}</p>\r\n                <p>population {data.population}</p>\r\n                <h4>languages</h4>\r\n                <ul>\r\n                  {data.languages.map((language) => {\r\n                    return <li key={data.nativeName}>{language.name}</li>\r\n                  })}\r\n                </ul>\r\n                <img src={data.flag} width=\"100\" height=\"100\"/>\r\n               </div>\r\n        \r\n      })\r\n      setDataDisplayed(returnedData)\r\n    } else {\r\n      setCountry('')\r\n      setDataDisplayed('')\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        find countries\r\n        <input\r\n        onChange={handleCountryChange}\r\n        value={country}>\r\n        </input>\r\n      </form>\r\n      {dataDisplayed}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}